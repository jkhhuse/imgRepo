bin/spark-submit \
  --class "Test" \
  --master local \
  myapp/1-1.0-SNAPSHOT.jar


a1.sources = r1
a1.sinks = k1
a1.channels = c1


a1.sources.r1.type = syslogudp
a1.sources.r1.port = 10514
a1.sources.r1.host = 192.168.174.132
a1.sources.r1.channels = c1


a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100


a1.sinks.k1.type = hbase
a1.sinks.k1.table = test
a1.sinks.k1.columnFamily = cf
a1.sinks.k1.serializer = org.apache.flume.sink.hbase.SimpleHbaseEventSerializer
a1.sinks.k1.channel = c1


agent.sinks.hbaseSink.serializer= org.apache.flume.sink.hbase.RegexHbaseEventSerializer
agent.sinks.hbaseSink.serializer.regex=^([^,]+),([^,]+),([^,]+),([^,]+)$
agent.sinks.hbaseSink.serializer.colNames=c1,c2,c3,c4






a1.sources.r1.interceptors.i1.regex = ^(?:\\n)?(\\d\\d\\d\\d-\\d\\d-\\d\\d\\s\\d\\d:\\d\\d)
a1.sources.r1.interceptors.i1.serializers = s1
a1.sources.r1.interceptors.i1.serializers.s1.type = org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer
a1.sources.r1.interceptors.i1.serializers.s1.name = timestamp
a1.sources.r1.interceptors.i1.serializers.s1.pattern = yyyy-MM-dd HH:mm


匹配所有的数据
([\w\W]*)

测试通过:
#a1.sinks.k1.serializer= org.apache.flume.sink.hbase.RegexHbaseEventSerializer
#a1.sinks.k1.serializer.regex=(\\d+)\\s(\\S+)\\s(\\S+)\\s(\\d+)\\s(.+)
#a1.sinks.k1.serializer.colNames=id,first_name,last_name,age,gpa



0 2017/03/14 15:26:12 venus 1 5 0.3.0 pf 183.61.167.80 17788 NULL 192.168.210.12 17866 NULL IPPROTO_UDP POLICY_DENY 0 61 61 0 ''包过滤日志''
0 ""2017/03/14 14:19:58"" venus 1 5 0.3.0 pf 203.178.148.19 NULL 8 172.16.1.6 NULL 0 IPPROTO_ICMP POLICY_DENY 0 32 32 0 ""<B0><FC><B9><FD><C2><CB><C8><D5>־""


(\\d+)\s(\\S+)\s(\S+)\s(\d+)\s(\\d)

date,time,dname,devid,logtype,pri,ver,mod,sa,sport,type,da,dport,code,proto,policy,duration,rcvd,sent,fwlog,dsp_msg



同时配置多个HBase解析规则
a1.sources = r1
a1.sinks = k1 k2
a1.channels = c1 c2

a1.sources.r1.type = syslogudp
a1.sources.r1.port = 10514
a1.sources.r1.host = 192.168.174.134
a1.sources.r1.channels = c1 c2

a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

a1.channels.c2.type = memory
a1.channels.c2.capacity = 1000
a1.channels.c2.transactionCapacity = 100

a1.sinks.k1.type = hbase
a1.sinks.k1.table = test
a1.sinks.k1.columnFamily = cf
a1.sinks.k1.serializer= org.apache.flume.sink.hbase.RegexHbaseEventSerializer
a1.sinks.k1.serializer.regex=(\\d+)\\s(\\S+)\\s(\\S+)\\s(\\d+)\\s(\\d+)
a1.sinks.k1.serializer.colNames=id,first_name,last_name,age,gpa

a1.sinks.k2.type = hbase
a1.sinks.k2.table = test
a1.sinks.k2.columnFamily = cf
a1.sinks.k2.serializer= org.apache.flume.sink.hbase.RegexHbaseEventSerializer
a1.sinks.k2.serializer.regex=(\\d+)\\s(\\S+)\\s(\\S+)\\s(\\d+)\\s(\\d+)\\s(\\d+)
a1.sinks.k2.serializer.colNames=id_k2,first_name_k2,last_name_k2,age_k2,gpa_k2,k2

a1.sinks.k1.channel = c1
a1.sinks.k2.channel = c2

如果是这种格式，则需要配置拦截器：
a1.sources.r1.interceptors.i1.regex = \\=(\\S)\\s(\\d):(\\d)
a1.sources.r1.interceptors.i1.serializers = s1 s2 s3
a1.sources.r1.interceptors.i1.serializers.s1.name = one
a1.sources.r1.interceptors.i1.serializers.s2.name = two
a1.sources.r1.interceptors.i1.serializers.s3.name = three

匹配简单的=
name\s*=\s*(.*)

消息
kernel: devid=0 date="2017/05/26 15:50:25" dname=venus logtype=1 pri=5 ver=0.3.0 mod=pf sa=172.16.1.10 sport=62988 type=NULL da=192.168.16.135 dport=514 code=NULL proto=IPPROTO_UDP policy=POLICY_PERMIT duration=0 rcvd=706 sent=706 fwlog=0 dsp_msg=""

消息对应正则：
kernel:\sdevid=\s*(.*)\sdate=\s*(.*)\sdname=\s*(.*)\slogtype=\s*(.*)\spri=\s*(.*)\sver=\s*(.*)\smod=\s*(.*)\ssa=\s*(.*)\ssport=\s*(.*)\stype=\s*(.*)\sda=\s*(.*)\sdport=\s*(.*)\scode=\s*(.*)\sproto=\s*(.*)\spolicy=\s*(.*)\sduration=\s*(.*)\srcvd=\s*(.*)\ssent=\s*(.*)\sfwlog=\s*(.*)\sdsp_msg=\s*(.*)

devid date name logtype priority version mode src_addr src_port type des_addr des_port code proto policy duration rcvd sent fwlog dsp_msg

消息对应拦截器
a1.sources.r1.interceptors = i1
a1.sources.r1.interceptors.i1.type = regex_extractor
a1.sources.r1.interceptors.i1.regex = kernel:\\sdevid=\\s*(.*)\\sdate=\\s*(.*)\\sdname=\\s*(.*)\\slogtype=\\s*(.*)\\spri=\\s*(.*)\\sver=\\s*(.*)\\smod=\\s*(.*)\\ssa=\\s*(.*)\\ssport=\\s*(.*)\\stype=\\s*(.*)\\sda=\\s*(.*)\\sdport=\\s*(.*)\\scode=\\s*(.*)\\sproto=\\s*(.*)\\spolicy=\\s*(.*)\\sduration=\\s*(.*)\\srcvd=\\s*(.*)\\ssent=\\s*(.*)\\sfwlog=\\s*(.*)\\sdsp_msg=\\s*(.*)
a1.sources.r1.interceptors.i1.serializers = s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20
a1.sources.r1.interceptors.i1.serializers.s1.name = devid
a1.sources.r1.interceptors.i1.serializers.s2.name = date
a1.sources.r1.interceptors.i1.serializers.s3.name = name
a1.sources.r1.interceptors.i1.serializers.s4.name = logtype
a1.sources.r1.interceptors.i1.serializers.s5.name = priority
a1.sources.r1.interceptors.i1.serializers.s6.name = version
a1.sources.r1.interceptors.i1.serializers.s7.name = mode
a1.sources.r1.interceptors.i1.serializers.s8.name = src_addr
a1.sources.r1.interceptors.i1.serializers.s9.name = src_port
a1.sources.r1.interceptors.i1.serializers.s10.name = type
a1.sources.r1.interceptors.i1.serializers.s11.name = des_addr
a1.sources.r1.interceptors.i1.serializers.s12.name = des_port
a1.sources.r1.interceptors.i1.serializers.s13.name = code
a1.sources.r1.interceptors.i1.serializers.s14.name = proto
a1.sources.r1.interceptors.i1.serializers.s15.name = policy
a1.sources.r1.interceptors.i1.serializers.s16.name = duration
a1.sources.r1.interceptors.i1.serializers.s17.name = rcvd
a1.sources.r1.interceptors.i1.serializers.s18.name = sent
a1.sources.r1.interceptors.i1.serializers.s19.name = fwlog
a1.sources.r1.interceptors.i1.serializers.s20.name = dsp_msg



kernel: devid=0 date='2017/05/26 15:50:25' dname=venus logtype=1 pri=5 ver=0.3.0 mod=pf sa=172.16.1.10 sport=62988 type=NULL da=192.168.16.135 dport=514 code=NULL proto=IPPROTO_UDP policy=POLICY_PERMIT duration=0 rcvd=706 sent=706 fwlog=0 dsp_msg=''


a1.sources.r1.interceptors = i1
a1.sources.r1.interceptors.i1.type = regex_extractor
a1.sources.r1.interceptors.i1.regex = (\\d+)\\s(\\S+)\\s(\\S+)\\s(\\d+)\\s(\\d+)
a1.sources.r1.interceptors.i1.serializers = s1 s2 s3 s4 s5
a1.sources.r1.interceptors.i1.serializers.s1.name = id
a1.sources.r1.interceptors.i1.serializers.s2.name = first_name
a1.sources.r1.interceptors.i1.serializers.s3.name = s_name
a1.sources.r1.interceptors.i1.serializers.s4.name = wf
a1.sources.r1.interceptors.i1.serializers.s5.name = ff



使用logger sink测试
a1.sources = r1
a1.sinks = k1
a1.channels = c1
a1.sources.r1.interceptors = i1 i2

a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

a1.sources.r1.interceptors.i1.type = REGEX_EXTRACTOR
a1.sources.r1.interceptors.i1.regex = (\\S)\\s(\\d)
a1.sources.r1.interceptors.i1.serializers = s1 s2
a1.sources.r1.interceptors.i1.serializers.s1.name = id
a1.sources.r1.interceptors.i1.serializers.s2.name = name

a1.sources.r1.interceptors.i2.type = COMBINED_HEADER
a1.sources.r1.interceptors.i2.order = name id
a1.sources.r1.interceptors.i2.separator = " "

a1.sources.r1.type = syslogudp
a1.sources.r1.port = 10514
a1.sources.r1.host = 192.168.174.134
a1.sources.r1.channels = c1

a1.sinks.k1.type = logger
a1.sinks.k1.channel = c1